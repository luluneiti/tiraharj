# Miten ohjelma suoritetaan, miten eri toiminnallisuuksia käytetään
    Ohjelman voi suorittaa käyttölittymän ja pääohjelman kautta.
        - Käyttöliittymä (matriisin koko ja esteiden määrä rajattu)
            - Syötä lähtö- ja maalisolmun koordinaatit niille varattuihin tekstikenttiin.
            - Valitse algoritmi: Dijkstra, Astar, IDAStar
            - Valitse kekoratkaisu (Huom: IDAStar ei käytä kekoa, mutta kekoratkaisu on valittava)
            - Arvo etäisyydet klikkaamalla "Arvo etäisydet" painiketta
            - Syötä halutessasi esteiden koordinatit niille varattuihin tekstikenttiin. Esteitä voi olla max. kolme.
            - Käynnistä algoritmi klikkaamalla "Etsi lyhin polku" painiketta.
            --> Ohjelma palauttaa ajoon kuluneen ajan ja käsiteltyjen solmujen määrän". Kuittaa viesti.
            --> Ohjelma palauttaa polun. Kuittaa viesti.
        - Pääohjelma (matriisin koko ja esteiden määrää ei ole rajoitettu, mutta tulostuksessa todella isot saattavat aiheuttaa ongelmia)
             - Käynnistä pääohjelma
             - Vastaa esitettyihin kysymyksiin
             --> Ohjelma palauttaa ajoon kuluneen ajan ja käsiteltyjen solmujen määrän". 
             --> Ohjelma palauttaa polun. 
# Minkä muotoisia syötteitä ohjelma hyväksyy
    - Käyttöliittymä / Pääohjelma
            - Käyttöliittymällä syötetään koordinaatit, joiden pitää olla lukuja. 
            - Ohjelman tarkistaa, etteivät lähtö- ja maalikoordinaatit ole tyhjät ja ettei este ole sama kuin lähtö- tai maalikoordinaatti.
            - Ohjelma tarkistaa, että koordinaatit saavutettavissa.
# Missä hakemistossa on jar ja ajamiseen tarvittavat testitiedostot.
    - Tiraharj-kansion juuressa ja Git:n release-kohdassa. Jar. tiedosto käynnistää graafisen käyttöliitymän.
